# -*- coding: utf-8 -*-
##############################################################################
#
#    OpenERP, Open Source Management Solution
#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################
# Generated by the OpenERP plugin for Dia !
from openerp.osv import fields,osv

class sisr_base_dependencia_gerencia(osv.osv):
    """Estructura de Dependencias Administrativas. Esto debe estar en el módulo base de SISR"""
    _name = 'sisr.base.dependencia_gerencia'
    _rec_name = 'nombre'
    _columns = {
        'codigo': fields.char(string="Código", size=20),
        'tipo': fields.selection([('general','General'),('regional','Regional')], string="Tipo de Gerencia", help='Tipo de Gerencia'),
        'nombre': fields.char(string="Nombre", size=60),
        'ubicacion': fields.text(string="Ubicación", help='Ubicación física de la gerencia'),
        'direccion_id': fields.many2one('sisr.base.dependencia_direccion', string="Dirección", help='Dirección a la cual pertenece esta gerencia'),
        'gerencia_linea_ids': fields.one2many('sisr.base.dependencia_gerencia_linea','gerencia_general_id',string="Gerencia de Línea", help='Gerencias de Línea que pertenecen a esta Gerencia General (Solo en caso de ser Gerencia General)'),
        'division_ids': fields.one2many('sisr.base.dependencia_division', 'gerencia_regional_id', string="División", help='Divisiones que pertenecen a esta Gerencia Regional (Solo en caso de ser Gerencia Regional)'),
        'cfs_ids': fields.one2many('sisr.base.dependencia_cfs', 'gerencia_regional_id', string="C.F.S.", help='C.F.S. que pertenecen a esta Gerencia Regional (Solo en caso de ser Gerencia Regional)'),
    }
    
    def name_get(self, cr, uid, ids, context=None):
        res = []
        gerencias = self.browse(cr, uid, ids, context)
        for gerencia in gerencias:
            res.append((gerencia.id, gerencia.tipo + ' ' + gerencia.nombre))
        return res
    
sisr_base_dependencia_gerencia()

class sisr_base_dependencia_direccion(osv.osv):
    """Estructura de Dependencias Administrativas. Esto debe estar en el módulo base de SISR"""
    _name = 'sisr.base.dependencia_direccion'
    _rec_name = 'nombre'
    _columns = {
        'codigo': fields.char(string="Código", size=20, help='Código de la Dirección'),
        'nombre': fields.char(string="Nombre", size=60, help='Nombre de la Dirección'),
        'ubicacion': fields.text(string="Ubicación", help='Ubicación física de la dirección'),
        'gerencia_linea_ids': fields.one2many('sisr.base.dependencia_gerencia','direccion_id', string="Gerencias Generales o Regionales", help='Gerencias Generales o Regionales que pertenecen a esta Dirección'),
    }
sisr_base_dependencia_direccion()

class sisr_base_dependencia_gerencia_linea(osv.osv):
    _name = 'sisr.base.dependencia_gerencia_linea'
    _rec_name = 'nombre'
    _columns = {
        'codigo': fields.char(string="Código", size=20),
        'nombre': fields.char(string="Nombre", size=60, help='Nombre de la gerencia de línea'),
        'ubicacion': fields.text(string="Ubicación", help='Ubicación física de la gerencia de línea'),
        'gerencia_general_id': fields.many2one('sisr.base.dependencia_gerencia', string="Gerencia General", help='Gerencia General a la que pertenece'),
        'division_ids': fields.one2many('sisr.base.dependencia_division', 'gerencia_linea_id', string="División", help='Divisiones que pertenecen a esta gerencia de línea'),
    }
sisr_base_dependencia_gerencia_linea()

class sisr_base_dependencia_division(osv.osv):
    _name = 'sisr.base.dependencia_division'
    _columns = {
        'codigo': fields.char(string="Código", size=20, help='Código de la División'),
        'nombre': fields.char(string="Nombre", size=60, help='Nombre de la División'),
        'ubicacion': fields.text(string="Ubicación", help='Ubicación física de la División'),
        'gerencia_regional_id': fields.many2one('sisr.base.dependencia_gerencia', string="Gerencia Regional", help='Gerencia Regional a la que pertenece esta División (en caso de pertenecer a una Gerencia Regional)'),
        'gerencia_linea_id': fields.many2one('sisr.base.dependencia_gerencia_linea', string="Gerencia de Línea", help='Gerencia de Línea a la que pertenece esta división (en caso de pertenecer a una gerencia de Línea)'),
        'coordinacion_ids': fields.one2many('sisr.base.dependencia_coordinacion', 'division_id', string="Coordinación", help='Coordinaciones que pertenecen a esta división'),
    }
sisr_base_dependencia_division()

class sisr_base_dependencia_coordinacion(osv.osv):
    _name = 'sisr.base.dependencia_coordinacion'
    _rec_name = 'nombre'
    _columns = {
        'codigo': fields.char(string="Código", size=20, help='Código de la coordinación'),
        'nombre': fields.char(string="Nombre", size=60, help='Nombre de la Coordinación'),
        'ubicacion': fields.text(string="Ubicación", help='Ubicación física de la coordinación'),
        'cfs_id': fields.many2one('sisr.base.dependencia_cfs', string="C.F.S.", help='C.F.S. al que pertenece esa coordinación (en caso de pertenecer a un CFS)'),
        'division_id': fields.many2one('sisr.base.dependencia_cfs', string="División", help='División a la que pertenece esta coordinación (en caso de pertenecer a una División)'),
    }
sisr_base_dependencia_coordinacion()

class sisr_base_dependencia_cfs(osv.osv):
    _name = 'sisr.base.dependencia_cfs'
    _rec_name = 'nombre'
    _columns = {
        'codigo': fields.char(string="Código", size=20),
        'nombre': fields.char(string="Nombre", size=80, help='Nombre del C.F.S.'),
        'gerencia_regional_id': fields.many2one('sisr.base.dependencia_gerencia', string="Gerencia Regional", help='Gerencia Regional a la que pertenece este C.F.S'),
        'coordinacion_ids': fields.one2many('sisr.base.dependencia_coordinacion', 'cfs_id', string="Coordinación", help='Coordinaciones que pertenecen a este C.F.S.'),
        'estado_id': fields.many2one('estado', string="Estado", help='Estado al que pertenece el CFS'),
        'municipio_id': fields.many2one('municipio', string="Municipio", help='Municipio al que pertenece el CFS'),
        'parroquia_id': fields.many2one('parroquia', string="Parroquia", help='Parroquia la que pertenece el CFS'),
        'ubicacion': fields.text('Ubicación', help='Ubicación específica del CFS'),
        'geo_latitud': fields.char('Latitud', size=20, help='Latitud de la Posición Geográfica del C.F.S.'),
        'geo_longitud': fields.char('Longitud', size=20, help='Longitud de la Posición Geográfica del C.F.S.'),
        
        
    }
sisr_base_dependencia_cfs()

class sisr_base_hr_cargo(osv.osv):
    """Tabla de Cargos de Inces"""
    _name = 'sisr.base.hr_cargo'
    _rec_name = 'nombre'
    _columns = {
        'codigo': fields.char(string="Código", size=20, help='Código del Cargo'),
        'nombre': fields.char(string="Nombre", size=60, help='Nombre del Cargo'),
    }
sisr_base_hr_cargo()

